[{"name":"app.R","content":"# Shiny Dashboard\r\n\r\n## app.R ##\r\nlibrary(shiny)\r\nlibrary(shinydashboard)\r\nlibrary(ggplot2)\r\nlibrary(plotly)\r\n\r\n# Load Data\r\nraw_lead <-  read.csv(\"https://raw.githubusercontent.com/quinCHB/Public-Datasources/main/lead.csv\")\r\n\r\n\r\nui <- dashboardPage(\r\n\r\n  dashboardHeader(title = \"MN Public Health Data Access Portal\"),\r\n\r\n  dashboardSidebar(\r\n\r\n    selectInput(\"par_region\",\r\n                label= \"In Development\",\r\n                choices= \"In Development\", #sort(unique(raw_lead$location)),\r\n                selected= NULL,\r\n                multiple= FALSE\r\n    ),\r\n\r\n    selectInput(\"par_chb\",\r\n                label= \"In Development\",\r\n                choices= \"In Development\", #sort(unique(raw_lead$location)),\r\n                selected= NULL,\r\n                multiple= FALSE\r\n    ),\r\n\r\n    selectInput(\"par_county\",\r\n                label= \"Select County of Interest\",\r\n                choices= sort(unique(raw_lead$location)),\r\n                selected= \"Kittson\",\r\n                multiple= FALSE\r\n                )\r\n\r\n    ),\r\n  dashboardBody(\r\n    fluidRow(box(plotOutput(\"lead_state\")),\r\n             box()\r\n             ),\r\n    fluidRow(box(), \r\n             box(plotOutput(\"lead_county\"))\r\n             )\r\n  )\r\n)\r\n\r\nserver <- function(input, output) { \r\n  \r\n  #State Plot Total\r\n  output$lead_state <-  renderPlot({\r\n   \r\n     raw_lead[raw_lead$location ==\"Minnesota\" & \r\n              raw_lead$indicator== \"Test year (annual method)\"&\r\n              raw_lead$Indicator == \"Blood lead testing\"\r\n              #Requires a comma to work\r\n              ,] |>\r\n      ggplot(aes(x= year, y= pctTested/100, color= ageGroup)) +\r\n      geom_line()+\r\n      geom_point()+\r\n      guides(color = guide_legend(title = \"Age Group\"))+\r\n      scale_x_discrete(limits = raw_lead$year, guide = guide_axis(n.dodge = 2))+\r\n      labs(\r\n        title = \"Lead Testing\",\r\n        x = NULL,\r\n        y = \"Pct Tested\",\r\n        caption = \"Data last updated, 1/15/2024\")\r\n  })\r\n  \r\n  \r\n  output$lead_chb <-  renderPlot({\r\n    \r\n    raw_lead[raw_lead$location ==\"Minnesota\" & \r\n               raw_lead$indicator== \"Test year (annual method)\"&\r\n               raw_lead$Indicator == \"Blood lead testing\"\r\n             #Requires a comma to work\r\n             ,] |>\r\n      ggplot(aes(x= year, y= pctTested/100, color= ageGroup)) +\r\n      geom_line()+\r\n      geom_point()+\r\n      \r\n      scale_x_discrete(limits = raw_lead$year)+\r\n      labs(\r\n        title = \"Lead Testing\",\r\n        x = NULL,\r\n        y = \"Pct Tested\",\r\n        caption = \"Data last updated, 1/15/2024\")\r\n  })\r\n  \r\n  \r\n  \r\n  # Get county data subset\r\n  county_sub <- reactive({raw_lead[raw_lead$location == input$par_county,] })\r\n  \r\n  output$lead_county <-  renderPlot({\r\n    #Open parenthesis since it is dynamic\r\n    county_sub() |>\r\n      ggplot(aes(x= year, y= pctTested/100, color= ageGroup)) +\r\n      geom_line()+\r\n      geom_point()+\r\n      guides(color = guide_legend(title = \"Age Group\"))+\r\n      scale_x_discrete(limits = raw_lead$year, guide = guide_axis(n.dodge = 2))+\r\n      labs(\r\n        title = \"Lead Testing\",\r\n        x = NULL,\r\n        y = \"Pct Tested\",\r\n        caption = \"Data last updated, 1/15/2024\")\r\n  })\r\n}\r\n\r\nshinyApp(ui=ui, server=server)","type":"text"}]
