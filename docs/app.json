[{"name":"app.R","content":"# Shiny Dashboard\r\n\r\n## app.R ##\r\nlibrary(shiny)\r\nlibrary(shinydashboard)\r\nlibrary(ggplot2)\r\n\r\n# Load Data\r\n  \r\n# Input parameters\r\n  # State Community Health Services Advisory Committee as of 1_17_2024\r\n  input_schsac_raw <- read.csv(\r\n    \"https://raw.githubusercontent.com/quinCHB/Public-Datasources/main/MN%20SCHSAC%20%26%20CHB%20Regions/State%20Community%20Health%20Services%20Advisory%20Committee%20as%20of%201_17_2024.csv\"\r\n  )\r\n  \r\n  input_chb_raw <- read.csv(\r\n    \"https://raw.githubusercontent.com/quinCHB/Public-Datasources/main/MN%20SCHSAC%20%26%20CHB%20Regions/MN%20CHB%20as%20of%201_17_2024.csv\"\r\n  )\r\n\r\n\r\n\r\n#Healthly Homes\r\nlead_raw <-  read.csv(\r\n  \"https://raw.githubusercontent.com/quinCHB/Public-Datasources/main/MN%20Public%20Health%20Data%20Access%20Portal/Healthy%20Homes/Childhood%20Lead%20Exposure.csv\"\r\n)\r\n\r\n\r\nui <- dashboardPage(\r\n\r\n  dashboardHeader(title = \"MN Public Health Data Access Portal\"),\r\n\r\n  dashboardSidebar(\r\n\r\n    selectInput(\"par_region\",\r\n                label= \"Select SCHSAC Region\",\r\n                choices= sort(unique(input_schsac_raw$Region)),\r\n                selected= \"Northwest\",\r\n                multiple= FALSE\r\n    ),\r\n\r\n    selectInput(\"par_CHB\",\r\n                label= \"Select CHB Region\",\r\n                choices= sort(unique(input_chb_raw$CHB)),\r\n                selected= \"Quin County\",\r\n                multiple= FALSE\r\n    ),\r\n\r\n    selectInput(\"par_county\",\r\n                label= \"Select County of Interest\",\r\n                choices= sort(unique(lead_raw$location)),\r\n                selected= \"Kittson\",\r\n                multiple= FALSE\r\n                )\r\n\r\n    ),\r\n  dashboardBody(\r\n    fluidRow(box(plotOutput(\"lead_state\")),\r\n             box(plotOutput(\"lead_region\"))\r\n             ),\r\n    fluidRow(box(plotOutput(\"lead_chb\")), \r\n             box(plotOutput(\"lead_county\"))\r\n             )\r\n  )\r\n)\r\n\r\nserver <- function(input, output) { \r\n  #Healthy Homes\r\n  \r\n  #Lead\r\n  #State\r\n  output$lead_state <-  renderPlot({\r\n   \r\n    lead_raw[lead_raw$location ==\"Minnesota\" & \r\n              lead_raw$indicator== \"Blood lead testing\"&\r\n              lead_raw$indicator.type == \"Test year (annual method)\"\r\n              #Requires a comma to work\r\n              ,] |>\r\n      ggplot(aes(x= year, y= pctTested, color= ageGroup)) +\r\n      geom_line()+\r\n      geom_point()+\r\n      theme(legend.position=\"bottom\")+\r\n      guides(color = guide_legend(title = \"Age Group\"))+\r\n      scale_x_discrete(limits = lead_raw$year, guide = guide_axis(n.dodge = 2))+\r\n      labs(\r\n        title = \"Blood Lead Testing (Test Year) for all of Minnesota\",\r\n        x = NULL,\r\n        y = \"Pct Tested\",\r\n        caption = \"Data last updated, 1/15/2024\")\r\n  })\r\n  \r\n  #Region\r\n  # Combine Region\r\n  # A lot of sources online say to use all= TRUE after the by condition for an inner. \r\n  # This does not appear to be correct. It seems like it is executing an outer join not an inner join\r\n   lead_Region <- merge(x= lead_raw, y= input_schsac_raw, by.x= \"location\", by.y= \"County\") #, all = TRUE) Don't include the all = TRUE \r\n  # #https://www.youtube.com/watch?v=zmiC7X9fUmo\r\n  # First sum number tested\r\n   # Next sum denominator\r\n   #Combine in a completed data set\r\n   \r\n   #Sum will be applied to numTested and it will (~) be subsetted by everything after\r\n   lead_RegionGrpTested <-  aggregate(numTested~\r\n                                      ageGroup+\r\n                                      Region+\r\n                                      year+\r\n                                      indicator+\r\n                                      indicator.type+\r\n                                      ebllDescription, lead_Region, FUN=sum)\r\n   #Rename grouped field\r\n   colnames(lead_RegionGrpTested)[colnames(lead_RegionGrpTested) == \r\n                                           'numTested'] <- 'regionNumTested'\r\n   \r\n   lead_RegionGrpDenominator <-  aggregate(denominator~\r\n                                           ageGroup+\r\n                                           Region+\r\n                                           year+\r\n                                           indicator+\r\n                                           indicator.type+\r\n                                           ebllDescription, lead_Region, FUN=sum)\r\n   #Rename grouped field\r\n   colnames(lead_RegionGrpDenominator)[colnames(lead_RegionGrpDenominator) == \r\n                                           'denominator'] <- 'regionDenominator'\r\n   \r\n   lead_RegionWithTestGrp <- merge(x= lead_Region, \r\n                                   y= lead_RegionGrpTested, \r\n                                   by= c(\r\n                                   \"ageGroup\",\r\n                                   \"Region\",\r\n                                   \"year\",\r\n                                   \"indicator\",\r\n                                   \"indicator.type\",\r\n                                   \"ebllDescription\"), \r\n                                   all.x = TRUE) #Left join so counties may be displayed moving forward\r\n   lead_RegionComplete <- merge(x= lead_RegionWithTestGrp, \r\n                                y= lead_RegionGrpDenominator, \r\n                                by= c(\r\n                                      \"ageGroup\",\r\n                                      \"Region\",\r\n                                      \"year\",\r\n                                      \"indicator\",\r\n                                      \"indicator.type\",\r\n                                      \"ebllDescription\"), \r\n                                      all.x = TRUE) #Left join so counties may be displayed moving forward\r\n   lead_RegionComplete$regionTestPct <- round(lead_RegionComplete$regionNumTested/lead_RegionComplete$regionDenominator*100,2)\r\n # #  \r\n  #Reactive Data\r\n  lead_region_sub <- reactive({lead_RegionComplete[lead_RegionComplete$Region == input$par_region &\r\n                                                   lead_RegionComplete$indicator== \"Blood lead testing\"&\r\n                                                   lead_RegionComplete$indicator.type == \"Test year (annual method)\",] })\r\n\r\n  output$lead_region <-  renderPlot({\r\n    #Open parenthesis since it is dynamic\r\n    lead_region_sub() |>\r\n      ggplot(aes(x= year, y= regionTestPct, color= ageGroup)) +\r\n      geom_line()+\r\n      geom_point()+\r\n      guides(color = guide_legend(title = \"Age Group\"))+\r\n      scale_x_discrete(limits = lead_region_sub()$year, guide = guide_axis(n.dodge = 2))+\r\n      labs(\r\n        title = paste(\"Blood Lead Testing (Test Year) for\", input$par_region, \"Region\"),\r\n        x = NULL,\r\n        y = \"Pct Tested\",\r\n        caption = \"Data last updated, 1/15/2024\")\r\n  })\r\n\r\n#CHB\r\n    # Combine CHB\r\n    # This does not appear to be correct. It seems like it is executing an outer join not an inner join\r\n    lead_CHB <- merge(x= lead_raw, y= input_chb_raw, by.x= \"location\", by.y= \"County\") #, all = TRUE) Don't include the all = TRUE\r\n    \r\n    # #https://www.youtube.com/watch?v=zmiC7X9fUmo\r\n    # First sum number tested\r\n    # Next sum denominator\r\n    #Combine in a completed data set\r\n    \r\n    #Sum will be applied to numTested and it will (~) be subsetted by everything after\r\n    lead_CHBGrpTested <-  aggregate(numTested~\r\n                                         ageGroup+\r\n                                         CHB+\r\n                                         year+\r\n                                         indicator+\r\n                                         indicator.type+\r\n                                         ebllDescription, lead_CHB, FUN=sum)\r\n    #Rename grouped field\r\n    colnames(lead_CHBGrpTested)[colnames(lead_CHBGrpTested) == \r\n                                     'numTested'] <- 'chbNumTested'\r\n    \r\n    lead_CHBGrpDenominator <-  aggregate(denominator~\r\n                                         ageGroup+\r\n                                         CHB+\r\n                                         year+\r\n                                         indicator+\r\n                                         indicator.type+\r\n                                         ebllDescription, lead_CHB, FUN=sum)\r\n    #Rename grouped field\r\n    colnames(lead_CHBGrpDenominator)[colnames(lead_CHBGrpDenominator) == \r\n                                          'denominator'] <- 'chbDenominator'\r\n    \r\n    lead_CHBWithTestGrp <- merge(x= lead_CHB, \r\n                                 y= lead_CHBGrpTested, \r\n                                 by= c(\r\n                                 \"ageGroup\",\r\n                                 \"CHB\",\r\n                                 \"year\",\r\n                                 \"indicator\",\r\n                                 \"indicator.type\",\r\n                                 \"ebllDescription\"), \r\n                                 all.x = TRUE) #Left join so counties may be displayed moving forward\r\n    lead_CHBComplete <- merge(x= lead_CHBWithTestGrp, \r\n                              y= lead_CHBGrpDenominator, \r\n                              by= c(\r\n                                 \"ageGroup\",\r\n                                 \"CHB\",\r\n                                 \"year\",\r\n                                 \"indicator\",\r\n                                 \"indicator.type\",\r\n                                 \"ebllDescription\"), \r\n                                 all.x = TRUE) #Left join so counties may be displayed moving forward\r\n    lead_CHBComplete$CHBTestPct <- round(lead_CHBComplete$chbNumTested/lead_CHBComplete$chbDenominator*100,2)\r\n    # #  \r\n    #Reactive Data\r\n    lead_CHB_sub <- reactive({lead_CHBComplete[lead_CHBComplete$CHB == input$par_CHB &\r\n                                               lead_CHBComplete$indicator== \"Blood lead testing\"&\r\n                                               lead_CHBComplete$indicator.type == \"Test year (annual method)\",] })\r\n  \r\n  \r\n  output$lead_chb <-  renderPlot({\r\n    #Open parenthesis since it is dynamic\r\n    lead_CHB_sub() |>\r\n      ggplot(aes(x= year, y= CHBTestPct, color= ageGroup)) +\r\n      geom_line()+\r\n      geom_point()+\r\n      guides(color = guide_legend(title = \"Age Group\"))+\r\n      scale_x_discrete(limits = lead_raw$year, guide = guide_axis(n.dodge = 2))+\r\n      labs(\r\n        title = paste(\"Blood Lead Testing (Test Year) for\", input$par_CHB),\r\n        x = NULL,\r\n        y = \"Pct Tested\",\r\n        caption = \"Data last updated, 1/15/2024\")\r\n  })\r\n  \r\n  \r\n  # Get county data subset\r\n  lead_county_sub <- reactive({lead_raw[lead_raw$location == input$par_county & \r\n                              lead_raw$indicator== \"Blood lead testing\" &\r\n                              lead_raw$indicator.type == \"Test year (annual method)\",] \r\n                            })\r\n  \r\n  output$lead_county <-  renderPlot({\r\n    #Open parenthesis since it is dynamic\r\n    lead_county_sub() |>\r\n      ggplot(aes(x= year, y= pctTested, color= ageGroup)) +\r\n      geom_line()+\r\n      geom_point()+\r\n      guides(color = guide_legend(title = \"Age Group\"))+\r\n      scale_x_discrete(limits = lead_raw$year, guide = guide_axis(n.dodge = 2))+\r\n      scale_y_continuous(breaks= round(seq(min(lead_county_sub()$pctTested), max(lead_county_sub()$pctTested), by= 2))) +\r\n      labs(\r\n        title = paste(\"Blood Lead Testing (Test Year) for\", input$par_county, \"County\"),\r\n        x = NULL,\r\n        y = \"Pct Tested\",\r\n        caption = \"Data last updated, 1/15/2024\")\r\n  })\r\n}\r\n\r\nshinyApp(ui=ui, server=server)","type":"text"}]
